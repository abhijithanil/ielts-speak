package com.ielts.speakingapp.services;

import com.google.cloud.speech.v1.*;
import com.google.protobuf.ByteString;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

import java.io.IOException;
import java.util.Base64;
import java.util.List;

@Service
@Slf4j
public class SpeechToTextService {

    @Value("${google.cloud.speech.language-code:en-US}")
    private String languageCode;

    public String transcribeAudio(String base64Audio, String audioFormat) {
        try {
            // Decode base64 audio
            byte[] audioBytes = Base64.getDecoder().decode(base64Audio);
            
            // Create the recognition config
            RecognitionConfig config = RecognitionConfig.newBuilder()
                .setLanguageCode(languageCode)
                .setEnableAutomaticPunctuation(true)
                .setModel("latest_long")
                .setUseEnhanced(true)
                .build();

            // Create the recognition audio
            RecognitionAudio audio = RecognitionAudio.newBuilder()
                .setContent(ByteString.copyFrom(audioBytes))
                .build();

            // Perform the transcription
            try (SpeechClient speechClient = SpeechClient.create()) {
                RecognizeResponse response = speechClient.recognize(config, audio);
                List<SpeechRecognitionResult> results = response.getResultsList();

                StringBuilder transcript = new StringBuilder();
                for (SpeechRecognitionResult result : results) {
                    List<SpeechRecognitionAlternative> alternatives = result.getAlternativesList();
                    for (SpeechRecognitionAlternative alternative : alternatives) {
                        transcript.append(alternative.getTranscript()).append(" ");
                    }
                }

                String finalTranscript = transcript.toString().trim();
                log.info("Transcription completed: {}", finalTranscript);
                return finalTranscript.isEmpty() ? "No speech detected" : finalTranscript;

            } catch (IOException e) {
                log.error("Error creating SpeechClient: {}", e.getMessage());
                return getMockTranscript();
            }

        } catch (Exception e) {
            log.error("Error transcribing audio: {}", e.getMessage());
            return getMockTranscript();
        }
    }

    private String getMockTranscript() {
        log.info("Using mock transcript due to error or missing credentials");
        return "This is a mock transcript of the user's speech. In a real implementation, this would be generated by Google Cloud Speech-to-Text API. The user would have spoken about their hometown, favorite music, or other IELTS speaking topics.";
    }
}
